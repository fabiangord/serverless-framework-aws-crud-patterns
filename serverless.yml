service: crud-simple-serverless
frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs20.x
  iam: 
    role:
      statements:
        - Effect: Allow
          Action: 'dynamodb:*'
          Resource: arn:aws:dynamodb:us-east-1:381491895266:table/usersTable

custom:
  serverless-dynamodb:
    stages:
      - dev
    start:
      docker: true
      port: 8000
      inMemory: true
      sharedDb: true

functions:
  getUser:
    handler: src/users/getUser/handler.getUserHandler  
    events:
      - httpApi:
          path: /users/get/{id}
          method: get
    package:
      patterns:
        - "src/users/getUser/handler.js"

  getUsers:
    handler: src/users/getUsers/handler.getUsersHandler
    events:
      - httpApi:
          path: /users/get-users
          method: get
    package:
      patterns:
        - "src/users/getUsers/handler.js"

  createUser:
    handler: src/users/createUsers/handler.createUsersHandler
    events:
      - httpApi:
          path: /users/create
          method: post
    package:
      patterns:
        - "src/users/createUsers/handler.js"

  updateUser:
    handler: src/users/updateUsers/handler.updateUsersHandler
    events:
      - httpApi:
          path: /users/update/{id}
          method: patch
    package:
      patterns:
        - "src/users/updateUsers/handler.js"

  deleteUser:
    handler: src/users/deleteUsers/handler.deleteUsersHandler
    events:
      - httpApi:
          path: /users/delete/{id}
          method: delete
    package:
      patterns:
        - "src/users/deleteUsers/handler."
      

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

package:
  patterns:
    - "!*/**"
    - "!**"

plugins:
  - serverless-offline